package inspector.jmondb.model;

import javax.persistence.*;
import java.util.HashMap;
import java.util.Map;

@Entity
@Table(name="imon_cv_term")
public class CvTerm {

	/** read-only iMonDB primary key; generated by JPA */
	@Id
	@Column(name="id", nullable=false)
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private long id;
	/** the accession number identifying the term in its controlled vocabulary */
	@Column(name="accession", nullable=false, length=255)
	private String accession;
	/** TODO */
	@Column(name="cv_property", nullable=false, length=255)
	private String cvProperty;
	/** TODO */
	@Column(name="label", nullable=false, length=255)
	private String label;
	/** the name for the term */
	@Column(name="name", nullable=false, length=255)
	private String name;
	/** the reference to the ontology or controlled vocabulary in which the term is defined */
	@Column(name="ontology", nullable=false, length=20)
	private String ontology;

	//TODO
	@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="hasCvTerm")
	@MapKey(name="id")
	private Map<Long, Value> definesProperties;

	/**
	 * Creates a CvTerm with the specified accession number, cvProperty, label, name and ontology reference.
	 *
	 * The id is automatically determined by the database as primary key.
	 *
	 * @param accession  The accession number identifying the term in its controlled vocabulary
	 * @param cvProperty
	 * @param label
	 * @param name  The name for the term
	 * @param ontology  The reference to the ontology or controlled vocabulary in which the term is defined
	 */
	public CvTerm(String accession, String cvProperty, String label, String name, String ontology) {
		this.accession = accession;
		this.cvProperty = cvProperty;
		this.label = label;
		this.name = name;
		this.ontology = ontology;

		definesProperties = new HashMap<>();
	}

	public long getId() {
		return id;
	}

	/* package private: read-only key to be set by the JPA implementation */
	void setId(long id) {
		this.id = id;
	}

	public String getAccession() {
		return accession;
	}

	public void setAccession(String accession) {
		this.accession = accession;
	}

	public String getCvProperty() {
		return cvProperty;
	}

	public void setCvProperty(String cvProperty) {
		this.cvProperty = cvProperty;
	}

	public String getLabel() {
		return label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getOntology() {
		return ontology;
	}

	public void setOntology(String ontology) {
		this.ontology = ontology;
	}

	@Override
	public boolean equals(Object o) {
		if(this == o) return true;
		if(o == null || getClass() != o.getClass()) return false;

		CvTerm that = (CvTerm) o;

		if(id != that.id) return false;
		if(accession != null ? !accession.equals(that.accession) : that.accession != null) return false;
		if(cvProperty != null ? !cvProperty.equals(that.cvProperty) : that.cvProperty != null) return false;
		if(label != null ? !label.equals(that.label) : that.label != null) return false;
		if(name != null ? !name.equals(that.name) : that.name != null) return false;
		if(ontology != null ? !ontology.equals(that.ontology) : that.ontology != null) return false;

		return true;
	}

	@Override
	public int hashCode() {
		int result = (int) (id ^ (id >>> 32));
		result = 31 * result + (accession != null ? accession.hashCode() : 0);
		result = 31 * result + (cvProperty != null ? cvProperty.hashCode() : 0);
		result = 31 * result + (label != null ? label.hashCode() : 0);
		result = 31 * result + (name != null ? name.hashCode() : 0);
		result = 31 * result + (ontology != null ? ontology.hashCode() : 0);
		return result;
	}
}
