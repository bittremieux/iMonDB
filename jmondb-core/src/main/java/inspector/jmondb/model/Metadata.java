package inspector.jmondb.model;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import javax.persistence.*;

/**
 * Metadata describing additional information about a {@link Run}.
 */
@Entity
@Access(AccessType.FIELD)
@Table(name="imon_metadata")
public class Metadata {

	@Transient
	private static final Logger logger = LogManager.getLogger(Metadata.class);

	/** read-only iMonDB primary key; generated by JPA */
	@Id
	@Column(name="id", nullable=false)
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long id;

	/** the metadata name */
	@Column(name="name", nullable=false, length=100)
	private String name;
	/** the metadata value */
	@Column(name="value", nullable=false, length=100)
	private String value;

	/** inverse part of the bi-directional relationship with {@link Run} */
	@ManyToOne(cascade={CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
	@JoinColumn(name="l_imon_run_id", nullable=false, referencedColumnName="id")
	private Run run;

	/**
	 * Default constructor required by JPA.
	 * Protected access modification to enforce that client code uses the constructor that sets the required member variables.
	 */
	protected Metadata() {

	}

	public Metadata(String name, String value, Run run) {
		setName(name);
		setValue(value);
		setRun(run);
	}

	public String getName() {
		return name;
	}

	private void setName(String name) {
		if(name != null)
			this.name = name;
		else {
			logger.error("The metadata name is not allowed to be <null>");
			throw new NullPointerException("The metadata name is not allowed to be <null>");
		}
	}

	public String getValue() {
		return value;
	}

	private void setValue(String value) {
		if(value != null)
			this.value = value;
		else {
			logger.error("The metadata value is not allowed to be <null>");
			throw new NullPointerException("The metadata value is not allowed to be <null>");
		}
	}

	public Run getRun() {
		return run;
	}

	private void setRun(Run run) {
		if(run != null) {
			this.run = run;
			run.addMetadata(this);
		}
		else {
			logger.error("The metadata run is not allowed to be <null>");
			throw new NullPointerException("The metadata run is not allowed to be <null>");
		}
	}

	@Override
	public boolean equals(Object o) {
		if(this == o) return true;
		if(o == null || getClass() != o.getClass()) return false;

		Metadata metadata = (Metadata) o;

		if(!name.equals(metadata.name)) return false;
		if(!value.equals(metadata.value)) return false;
		if(!run.equals(metadata.run)) return false;

		return true;
	}

	@Override
	public int hashCode() {
		int result = name.hashCode();
		result = 31 * result + value.hashCode();
		result = 31 * result + run.hashCode();
		return result;
	}

	@Override
	public String toString() {
		return "Metadata {id=" + id + ", " + name + "=" + value + ", run=" + run.getName() + '}';
	}
}
