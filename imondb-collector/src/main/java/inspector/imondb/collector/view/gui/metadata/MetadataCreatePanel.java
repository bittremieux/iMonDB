package inspector.imondb.collector.view.gui.metadata;

/*
 * #%L
 * iMonDB Collector
 * %%
 * Copyright (C) 2014 - 2015 InSPECtor
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import inspector.imondb.collector.model.MetadataMap;
import inspector.imondb.collector.model.RegexSource;

import javax.swing.*;
import java.awt.*;

public class MetadataCreatePanel {

    private JPanel panel;

    private JTextField textFieldKey;
    private JTextField textFieldValue;
    private JTextField textFieldRegex;
    private JComboBox<String> comboBoxSource;

    public MetadataCreatePanel() {
        for(RegexSource regexSource : RegexSource.values()) {
            comboBoxSource.addItem(regexSource.toString());
        }
    }

    public MetadataCreatePanel(MetadataMap metadataMap) {
        this();

        textFieldKey.setText(metadataMap.getKey());
        textFieldKey.setEnabled(false);

        textFieldValue.setText(metadataMap.getValue());
        textFieldValue.setEnabled(false);

        comboBoxSource.setSelectedItem(metadataMap.getSource().toString());

        textFieldRegex.setText(metadataMap.getRegex());
    }

    public JPanel getPanel() {
        return panel;
    }

    public MetadataMap getMetadataMap() {
        RegexSource source = RegexSource.fromString((String) comboBoxSource.getSelectedItem());
        return new MetadataMap(textFieldKey.getText(), textFieldValue.getText(), source, textFieldRegex.getText());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new FormLayout("fill:d:noGrow,left:4dlu:noGrow,fill:d:grow", "center:d:noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow"));
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(11);
        label1.setText("<html><b>Metadata key</b><html>");
        label1.setDisplayedMnemonic('K');
        label1.setDisplayedMnemonicIndex(18);
        label1.setToolTipText("The metadata key");
        CellConstraints cc = new CellConstraints();
        panel.add(label1, cc.xy(1, 1));
        final JLabel label2 = new JLabel();
        label2.setHorizontalAlignment(11);
        label2.setText("<html><b>Metadata value</b><html>");
        label2.setDisplayedMnemonic('V');
        label2.setDisplayedMnemonicIndex(18);
        label2.setToolTipText("The metadata value");
        panel.add(label2, cc.xy(1, 3));
        final JLabel label3 = new JLabel();
        label3.setHorizontalAlignment(11);
        label3.setText("<html><b>Regex source</b><html>");
        label3.setDisplayedMnemonic('S');
        label3.setDisplayedMnemonicIndex(15);
        label3.setToolTipText("The source on which to apply the regular expression to identify the metadata");
        panel.add(label3, cc.xy(1, 5));
        final JLabel label4 = new JLabel();
        label4.setHorizontalAlignment(11);
        label4.setText("<html><b>Regular expression</b><html>");
        label4.setDisplayedMnemonic('R');
        label4.setDisplayedMnemonicIndex(9);
        label4.setToolTipText("The regular expression used to identify the metadata from specific raw file information");
        panel.add(label4, cc.xy(1, 7));
        textFieldKey = new JTextField();
        textFieldKey.setMinimumSize(new Dimension(250, 24));
        textFieldKey.setPreferredSize(new Dimension(250, 24));
        panel.add(textFieldKey, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
        textFieldValue = new JTextField();
        textFieldValue.setMinimumSize(new Dimension(250, 24));
        textFieldValue.setPreferredSize(new Dimension(250, 24));
        panel.add(textFieldValue, cc.xy(3, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        textFieldRegex = new JTextField();
        textFieldRegex.setMinimumSize(new Dimension(250, 24));
        textFieldRegex.setPreferredSize(new Dimension(250, 24));
        panel.add(textFieldRegex, cc.xy(3, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        comboBoxSource = new JComboBox();
        comboBoxSource.setMinimumSize(new Dimension(250, 26));
        comboBoxSource.setPreferredSize(new Dimension(250, 26));
        panel.add(comboBoxSource, cc.xy(3, 5));
        label1.setLabelFor(textFieldKey);
        label2.setLabelFor(textFieldValue);
        label3.setLabelFor(comboBoxSource);
        label4.setLabelFor(textFieldRegex);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
